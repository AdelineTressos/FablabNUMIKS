{% extends 'visitor/index.html.twig' %}
 
{% block stylesheets %}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.css"/>
    <link rel="stylesheet" href="{{ asset('assets/styles/machine_resa.css') }}">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    {{ parent() }}
{% endblock %}
 
{% block title %}Test resa machines !{% endblock %}
 
{% block main %}
    <div class="container-fluid">
        <div class="d-flex flex-wrap justify-content-center">
            <div class="text-center mt-4">
                <h1>Les Pôles</h1>
            </div>
        </div>
 
        <section class="swiper-container mySwiper">
            <div class="swiper-wrapper">
                {% for workspace in workspaces %}
                    <div class="card swiper-slide">
                        <div class="card__content">
                            <span class="card__title">{{ workspace.getNameWorkspace() }}</span>
                            <p class="card__text">{{ workspace.getDescription() }}</p>
                            <button class="card__btn">View More</button>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </section>
 
        <div class="d-flex flex-wrap justify-content-center">
            <div class="text-center mt-4">
                <h1>Les Machines</h1><br>
            </div>
        </div>
 
        <section class="swiper-container mySwiper">
            <div class="swiper-wrapper">
                {% for machine in machines %}
                    <div class="card swiper-slide">
                        <div class="card__image">
                            <img src="{{ machine.machinePicture }}" alt="card image">
                              
                        </div>
 
                        <div class="card__content">
                            <span class="card__title">{{ machine.nameMachine }}</span>
                            <span class="card__name">{{ machine.numberMachine }}</span>
                            <p class="card__text">{{ machine.description }}</p> 
                            <button  class="card__btn" data-id="{{ machine.id }}" data-user-id="{{ user.id }}" >Réservez !</button><br>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </section>
        <br><br>
    </div><br>
 
    <div class="d-flex flex-wrap justify-content-center">
        <div class="text-center-txt mt-4">
            <button class="btn btn-outline-warning btn-lg" type="button" data-bs-toggle="offcanvas"
                    data-bs-target="#offcanvasTop" aria-controls="offcanvasTop">Toggle top offcanvas
            </button>
            <div class="offcanvas offcanvas-top" tabindex="-1" id="offcanvasTop" aria-labelledby="offcanvasTopLabel">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="offcanvasTopLabel">Conditions Utilisations</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    La nature offre une symphonie de couleurs et de sons au lever du soleil. Les oiseaux s'éveillent
                    avec le jour naissant, remplissant l'air de leurs chants mélodieux. Les premiers rayons de lumière
                    filtrent à travers les feuillages des arbres, créant des jeux d'ombres et de lumière sur le sol. La
                    rosée matinale brille comme des perles sur l'herbe fraîche. Au loin, les montagnes se découpent
                    contre le ciel rose et orangé. C'est un spectacle enchanteur qui se renouvelle chaque matin,
                    rappelant la beauté et la magie de la nature.
                </div>
            </div>
        </div>
    </div>
    </div><br><br>
 
    <script src="https://cdn.jsdelivr.net/npm/swiper/swiper-bundle.min.js"></script>
 
    <script>
        // Initialize Swiper
        var swiper = new Swiper(".mySwiper", {
            effect: "coverflow",
            grabCursor: true,
            centeredSlides: true,
            slidesPerView: "auto",
            coverflowEffect: {
                rotate: 5,
                stretch: 0,
                depth: 400,
                modifier: 1,
                slideShadows: false,
            },
            pagination: {
                el: ".swiper-pagination",
                clickable: true,
            },
        });

   


        // Fonction pour récupérer l'élément bouton par son ID et ajouter un gestionnaire d'événements
        document.querySelectorAll(".card__btn").forEach(function (button) {
            button.addEventListener("click", function (event) {
                event.preventDefault();
                var machineId = this.getAttribute('data-id');
                var userId = this.getAttribute('data-user-id')
                var dropdownMenuValues = this.getAttribute('data-start');
                var dateInputValue = this.getAttribute('data-end');
                console.log(machineId);
                console.log(userId);
                console.log(dropdownMenuValues);
                console.log(dateInputValue);
                updateReservation(machineId,userId);
            });
        });
 
 
        function updateReservation(machineId,userId) {
            var requestData = {
                date_reservation: '2026-03-18',
                start_hour: '10:00:00',
                end_hour: '12:00:00',
                machine_id: machineId,
                user_id: userId,
            };
            fetch('/machine/' + machineId + userId + '/reserve', {
                method: 'POST', 
                headers: {'Content-Type': 'application/json',},
                body: JSON.stringify(requestData),
            }).then(response => {
                if (!response.ok) {
                    throw new Error('La requête de réservation de machine a échoué.');
                }
                return response.json();
            }).then(data => {
                console.log('La réservation a été mise à jour avec succès :', data);
            }).catch(error => {
                console.error('Une erreur est survenue lors de la réservation de la machine :', error);
            });
        }

        
        
    
    </script>
 
{% endblock %}